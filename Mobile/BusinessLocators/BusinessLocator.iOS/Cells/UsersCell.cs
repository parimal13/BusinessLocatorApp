using Foundation;
using System;
using UIKit;
using BusinessLocator.iOS.Model;
using CoreAnimation;
using BusinessLocator.Shared.Models;
using System.IO;

namespace BusinessLocator.iOS
{
    public partial class UsersCell : UITableViewCell
    {
        private NSString cellID;

        public UsersCell(IntPtr handle) : base (handle)
        {
        }

        public UsersCell(NSString cellID) : base(UITableViewCellStyle.Default, cellID)
        {
            this.cellID = cellID;
        }

        public void UpdateCell(UserProfileModel data)
        {
            //Base64 to  Image Conversion
            //var base64String = "";
            var imageBytes = Convert.FromBase64String(data.Image);
            var imageData = NSData.FromArray(imageBytes);
            var Image = UIImage.LoadFromData(imageData);

            //Dispaly image From URL
            //var url = NSUrl.FromString("https://us.v-cdn.net/5019960/uploads/userpics/863/nH3M1EPC2YZE5.jpg");
            //var imgdata = NSData.FromUrl(url);
            //var uiImage = UIImage.LoadFromData(imgdata);

            ProfileImage.Image = Image;
            lblName.Text = data.DisplayName;
            lblMobileNumber.Text = data.PhoneNumber;
            lblAddress.Text = data.Address1;
        }

        public override void LayoutSubviews()
        {
            CALayer profileImageCircle = ProfileImage.Layer;
            profileImageCircle.CornerRadius = 35;
            profileImageCircle.MasksToBounds = true;
            //profileImageCircle.BorderColor = UIColor.FromRGB(98, 107, 186).CGColor;
            //profileImageCircle.BorderWidth = 3;
        }
    }
}